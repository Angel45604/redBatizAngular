var Sequelize, Store, User, app, bodyParser, cookieParser, express, expressSession, login, logout, multer, sequelize, store;

express = require('express');

bodyParser = require('body-parser');

multer = require('multer');

cookieParser = require('cookie-parser');

expressSession = require('express-session');

Sequelize = require('sequelize');

Store = require('express-sequelize-session')(expressSession.Store);
var cors = require('cors');
sequelize = new Sequelize('test1', 'root', 'n0m3l0', {
  host: "localhost",
  port: 3306,
  dialect: 'mysql',
  logging: false
});

store = new Store(sequelize);

User = sequelize.define('user', {
  login: {
    type: Sequelize.STRING,
    allowNull: false,
    unique: true
  },
  password: {
    type: Sequelize.STRING,
    allowNull: false
  },
  name:{
    type: Sequelize.STRING,
    allowNull:false
  }
});

User.belongsTo(store.Session, {
  foreignKeyConstraint: true
});

login = function(req, done) {
  return User.findOne({
    where: {
      login: req.body.login,
      password: req.body.password
    }
  }).then(function(user) {
    if (!user) {
      throw new Error('login failed');
    } else {
      return store.Session.findOne({
        where: {
          sid: req.sessionID
        }
      }).then(function(session) {
        if (!session) {
          return user;
        } else {
          console.log("EXITO");
          return user.setSession(session);
        }
      });
    }
  }).then(function(user) {
    return done(null, user);
  })["catch"](function(err) {
    return done(err, null);
  });
};

logout = function(req, done) {
  return User.findOne({
    where: {
      login: req.session.user
    }
  }).then(function(user) {
    if (!user) {
      return alert('Login failed');
    } else {
      return user.setSession(null);
    }
  }).then(function(user) {
    return done(null, user);
  })["catch"](function(err) {
    return done(err, null);
  });
};

app = express();
app.use(cors());
app.use(bodyParser.json());

app.use(bodyParser.urlencoded({
  extended: true
}));

app.use(multer());

app.use(cookieParser());

app.use(expressSession({
  name: 'sid',
  secret: 'MyAwesomeAppSessionSecret',
  store: store,
  resave: false,
  saveUninitialized: true
}));

app.all('*', function(req, res, next) {
  var ref;
  if ((ref = req.path) === '/' || ref === '/login' || ref === '/logout') {
    return next();
  } else {
    if (req.session.user) {
      return next();
    } else {
      return res.sendStatus(401);
    }
  }
});

app.get('/', function(req, res) {
  return res.send("<html><head><title>Login</title></head><body>\n<form action=\"/login\" method=\"POST\">\n  <label>Login <input type=\"text\" name=\"login\"/></label>\n  <label>Password <input type=\"password\" name=\"password\"/></label>\n  <button type=\"submit\">Login</button>\n</form></body></html>");
});

app.post('/login', function(req, res, next) {
  return login(req, function(err, user) {
    if (err != null) {
      return next(err);
    } else {
      console.log("EXITO");
      console.log(user);
      req.session.user = user.login;
      return res.send(user);
    }
  });
});

app.get('/logout', function(req, res, next) {
  return logout(req, function(err) {
    if (err != null) {
      return next(err);
    } else {
      delete req.session.user;
      console.log("adios");
      return req.session.destroy(function() {
        return res.redirect('/');
      });
    }
  });
});

app.get('/private', function(req, res) {
  return res.send("<html><head><title>Private</title></head><body>\n<h1>Hola " + req.session.user + "</h1>\n<p>...</p>\n<a href=\"/logout\">Logout</a>\n</body></html>");
});

module.exports = function(done) {
  return sequelize.sync({
    force: true
  }).then(function() {
    return done(null, app, {
      Session: store.Session,
      User: User
    });
  })["catch"](function(err) {
    return done(err);
  });
};

// ---
// generated by coffee-script 1.9.2